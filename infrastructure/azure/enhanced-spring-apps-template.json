{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "springAppsServiceName": {
      "type": "string",
      "defaultValue": "az-spring-app-demo",
      "metadata": {
        "description": "Name of the Azure Spring Apps service"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Resource group name"
      }
    },
    "keyVaultName": {
      "type": "string",
      "defaultValue": "[concat(parameters('springAppsServiceName'), '-kv')]",
      "metadata": {
        "description": "Name of the Azure Key Vault"
      }
    },
    "containerRegistryName": {
      "type": "string",
      "defaultValue": "[concat(replace(parameters('springAppsServiceName'), '-', ''), 'acr')]",
      "metadata": {
        "description": "Name of the Azure Container Registry"
      }
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('springAppsServiceName'), '-sb')]",
      "metadata": {
        "description": "Name of the Azure Service Bus namespace"
      }
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('springAppsServiceName'), '-ai')]",
      "metadata": {
        "description": "Name of the Application Insights component"
      }
    },
    "databaseServerName": {
      "type": "string",
      "defaultValue": "[concat(parameters('springAppsServiceName'), '-dbserver')]",
      "metadata": {
        "description": "Name of the PostgreSQL server"
      }
    },
    "databaseAdministratorLogin": {
      "type": "string",
      "defaultValue": "azureadmin",
      "metadata": {
        "description": "Database administrator login"
      }
    },
    "databaseAdministratorPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Database administrator password"
      }
    }
  },
  "variables": {
    "springAppsServiceName": "[parameters('springAppsServiceName')]",
    "keyVaultName": "[parameters('keyVaultName')]",
    "containerRegistryName": "[parameters('containerRegistryName')]",
    "serviceBusNamespaceName": "[parameters('serviceBusNamespaceName')]",
    "applicationInsightsName": "[parameters('applicationInsightsName')]",
    "databaseServerName": "[parameters('databaseServerName')]",
    "logAnalyticsWorkspaceName": "[concat(parameters('springAppsServiceName'), '-law')]",
    "applications": [
      {
        "name": "eureka-server",
        "runtime": "Java_17",
        "cpu": "1",
        "memory": "2Gi"
      },
      {
        "name": "config-server", 
        "runtime": "Java_17",
        "cpu": "1",
        "memory": "2Gi"
      },
      {
        "name": "gateway-service",
        "runtime": "Java_17",
        "cpu": "1",
        "memory": "2Gi"
      },
      {
        "name": "user-service",
        "runtime": "Java_17",
        "cpu": "1",
        "memory": "2Gi"
      },
      {
        "name": "product-service",
        "runtime": "Java_17",
        "cpu": "1",
        "memory": "2Gi"
      },
      {
        "name": "order-service",
        "runtime": "Java_17",
        "cpu": "1",
        "memory": "2Gi"
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-12-01-preview",
      "name": "[variables('logAnalyticsWorkspaceName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[variables('applicationInsightsName')]",
      "location": "[parameters('location')]",
      "kind": "web",
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      ],
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', variables('logAnalyticsWorkspaceName'))]"
      }
    },
    {
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2023-02-01",
      "name": "[variables('keyVaultName')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "tenantId": "[subscription().tenantId]",
        "accessPolicies": [],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false,
        "enableSoftDelete": true,
        "softDeleteRetentionInDays": 7,
        "enableRbacAuthorization": true
      }
    },
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-01-01-preview",
      "name": "[variables('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Basic"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces",
      "apiVersion": "2022-10-01-preview",
      "name": "[variables('serviceBusNamespaceName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard",
        "tier": "Standard"
      },
      "properties": {}
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "apiVersion": "2022-10-01-preview",
      "name": "[concat(variables('serviceBusNamespaceName'), '/order-processing-queue')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "maxDeliveryCount": 10,
        "defaultMessageTimeToLive": "PT1H",
        "deadLetteringOnMessageExpiration": true
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/queues",
      "apiVersion": "2022-10-01-preview",
      "name": "[concat(variables('serviceBusNamespaceName'), '/order-notifications-queue')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "maxDeliveryCount": 10,
        "defaultMessageTimeToLive": "PT1H",
        "deadLetteringOnMessageExpiration": true
      }
    },
    {
      "type": "Microsoft.ServiceBus/namespaces/topics",
      "apiVersion": "2022-10-01-preview",
      "name": "[concat(variables('serviceBusNamespaceName'), '/order-events-topic')]",
      "dependsOn": [
        "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
      ],
      "properties": {
        "defaultMessageTimeToLive": "PT1H"
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers",
      "apiVersion": "2022-12-01",
      "name": "[variables('databaseServerName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_B1ms",
        "tier": "Burstable"
      },
      "properties": {
        "administratorLogin": "[parameters('databaseAdministratorLogin')]",
        "administratorLoginPassword": "[parameters('databaseAdministratorPassword')]",
        "version": "14",
        "storage": {
          "storageSizeGB": 32
        },
        "backup": {
          "backupRetentionDays": 7,
          "geoRedundantBackup": "Disabled"
        },
        "highAvailability": {
          "mode": "Disabled"
        }
      }
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2022-12-01",
      "name": "[concat(variables('databaseServerName'), '/userdb')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('databaseServerName'))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2022-12-01",
      "name": "[concat(variables('databaseServerName'), '/productdb')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('databaseServerName'))]"
      ]
    },
    {
      "type": "Microsoft.DBforPostgreSQL/flexibleServers/databases",
      "apiVersion": "2022-12-01",
      "name": "[concat(variables('databaseServerName'), '/orderdb')]",
      "dependsOn": [
        "[resourceId('Microsoft.DBforPostgreSQL/flexibleServers', variables('databaseServerName'))]"
      ]
    },
    {
      "type": "Microsoft.AppPlatform/Spring",
      "apiVersion": "2023-12-01",
      "name": "[variables('springAppsServiceName')]",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))]"
      ],
      "sku": {
        "name": "S0",
        "tier": "Standard"
      },
      "properties": {
        "configServerProperties": {
          "configServer": {
            "gitProperty": {
              "uri": "https://github.com/chmald/az-spring-app-demo-config",
              "label": "main"
            }
          }
        },
        "tracing": {
          "enabled": true,
          "appInsightsInstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).InstrumentationKey]"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps",
      "apiVersion": "2023-12-01",
      "name": "[concat(variables('springAppsServiceName'), '/', variables('applications')[copyIndex()].name)]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring', variables('springAppsServiceName'))]"
      ],
      "copy": {
        "name": "applicationLoop",
        "count": "[length(variables('applications'))]"
      },
      "properties": {
        "public": true,
        "httpsOnly": false,
        "temporaryDisk": {
          "sizeInGB": 5,
          "mountPath": "/tmp"
        },
        "persistentDisk": {
          "sizeInGB": 0,
          "mountPath": "/persistent"
        }
      }
    },
    {
      "type": "Microsoft.AppPlatform/Spring/apps/deployments",
      "apiVersion": "2023-12-01",
      "name": "[concat(variables('springAppsServiceName'), '/', variables('applications')[copyIndex()].name, '/default')]",
      "dependsOn": [
        "[resourceId('Microsoft.AppPlatform/Spring/apps', variables('springAppsServiceName'), variables('applications')[copyIndex()].name)]"
      ],
      "copy": {
        "name": "deploymentLoop",
        "count": "[length(variables('applications'))]"
      },
      "properties": {
        "deploymentSettings": {
          "resourceRequests": {
            "cpu": "[variables('applications')[copyIndex()].cpu]",
            "memory": "[variables('applications')[copyIndex()].memory]"
          },
          "runtimeVersion": "[variables('applications')[copyIndex()].runtime]",
          "environmentVariables": {
            "SPRING_PROFILES_ACTIVE": "azure",
            "AZURE_KEYVAULT_ENDPOINT": "[reference(resourceId('Microsoft.KeyVault/vaults', variables('keyVaultName'))).vaultUri]",
            "APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('Microsoft.Insights/components', variables('applicationInsightsName'))).ConnectionString]"
          }
        },
        "source": {
          "type": "Jar",
          "relativePath": "<default>"
        }
      }
    }
  ],
  "outputs": {
    "springAppsServiceName": {
      "type": "string",
      "value": "[variables('springAppsServiceName')]"
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[parameters('resourceGroupName')]"
    },
    "keyVaultName": {
      "type": "string",
      "value": "[variables('keyVaultName')]"
    },
    "containerRegistryName": {
      "type": "string",
      "value": "[variables('containerRegistryName')]"
    },
    "serviceBusNamespaceName": {
      "type": "string",
      "value": "[variables('serviceBusNamespaceName')]"
    },
    "applicationInsightsName": {
      "type": "string",
      "value": "[variables('applicationInsightsName')]"
    },
    "databaseServerName": {
      "type": "string",
      "value": "[variables('databaseServerName')]"
    }
  }
}